{
  "contractName": "TokenMock",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "addDividend",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dividends",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_DIVIDEND_LOOP",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "calculateDividend",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BALANCE_FLAG",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getLastDividendAmount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "holded",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "toBePaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "totalDivAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "totalAmount",
          "type": "uint256"
        }
      ],
      "name": "Debug",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DividendPayed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "founder",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "valueAdded",
          "type": "uint256"
        }
      ],
      "name": "AddDividend",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": "0x60806040526040805190810160405280600381526020017f4449560000000000000000000000000000000000000000000000000000000000815250600690805190602001906200005192919062000173565b506040805190810160405280600381526020017f4449560000000000000000000000000000000000000000000000000000000000815250600790805190602001906200009f92919062000173565b506012600860006101000a81548160ff021916908360ff160217905550348015620000c957600080fd5b5033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600860009054906101000a900460ff16600a0a60ff16620f42400262ffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555062000222565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001b657805160ff1916838001178555620001e7565b82800160010185558215620001e7579182015b82811115620001e6578251825591602001919060010190620001c9565b5b509050620001f69190620001fa565b5090565b6200021f91905b808211156200021b57600081600090555060010162000201565b5090565b90565b61218680620002326000396000f300608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610117578063095ea7b3146101a757806318160ddd1461020c57806323b872dd14610237578063313ce567146102bc57806366188463146102ed57806370a0823114610352578063715018a6146103a9578063752d2bfb146103c0578063814b3fe0146103ed578063883c6f401461042e5780638da5cb5b1461045f57806395d89b41146104b65780639f65742614610546578063a357768a146105a4578063a9059cbb146105cf578063c4bb6bb714610634578063d73dd6231461068b578063dd62ed3e146106f0578063f2fde38b14610767575b600080fd5b34801561012357600080fd5b5061012c6107aa565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016c578082015181840152602081019050610151565b50505050905090810190601f1680156101995780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b357600080fd5b506101f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610848565b604051808215151515815260200191505060405180910390f35b34801561021857600080fd5b5061022161093a565b6040518082815260200191505060405180910390f35b34801561024357600080fd5b506102a2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610944565b604051808215151515815260200191505060405180910390f35b3480156102c857600080fd5b506102d1611047565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102f957600080fd5b50610338600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061105a565b604051808215151515815260200191505060405180910390f35b34801561035e57600080fd5b50610393600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112ec565b6040518082815260200191505060405180910390f35b3480156103b557600080fd5b506103be611347565b005b3480156103cc57600080fd5b506103eb6004803603810190808035906020019092919050505061144c565b005b3480156103f957600080fd5b50610418600480360381019080803590602001909291905050506115eb565b6040518082815260200191505060405180910390f35b34801561043a57600080fd5b5061044361160e565b604051808260ff1660ff16815260200191505060405180910390f35b34801561046b57600080fd5b50610474611613565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104c257600080fd5b506104cb611639565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561050b5780820151818401526020810190506104f0565b50505050905090810190601f1680156105385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561055257600080fd5b50610587600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116d7565b604051808381526020018281526020019250505060405180910390f35b3480156105b057600080fd5b506105b961177f565b6040518082815260200191505060405180910390f35b3480156105db57600080fd5b5061061a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611793565b604051808215151515815260200191505060405180910390f35b34801561064057600080fd5b50610675600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bce565b6040518082815260200191505060405180910390f35b34801561069757600080fd5b506106d6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611bf9565b604051808215151515815260200191505060405180910390f35b3480156106fc57600080fd5b50610751600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611df5565b6040518082815260200191505060405180910390f35b34801561077357600080fd5b506107a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e7c565b005b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108405780601f1061081557610100808354040283529160200191610840565b820191906000526020600020905b81548152906001019060200180831161082357829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b6000806000806000806000808973ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614151515610a1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f43616e6e6f742073656e6420746f6b656e7320746f20746f6b656e20736d617281526020017f7420636f6e74726163740000000000000000000000000000000000000000000081525060400191505060405180910390fd5b610a238b6112ec565b8911151515610a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42616c616e63652066726f6d206973206c657373207468616e2076616c75650081525060200191505060405180910390fd5b600260008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548911151515610b8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f416c6c6f77616e6365206973206e6f7420656e6175676874000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614151515610c33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4164647265737320746f2063616e206e6f74206265203078300000000000000081525060200191505060405180910390fd5b610c3c336112ec565b9650610c47336116d7565b95509550610c7a33610c7488610c668d8c611ee490919063ffffffff16565b611efd90919063ffffffff16565b87611f19565b610c838a6112ec565b9650610c8e8a6116d7565b93509350610cc18a610cbb86610cad8d8c611efd90919063ffffffff16565b611efd90919063ffffffff16565b85611f19565b610cca8b6112ec565b9650610d5b89600260008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ee490919063ffffffff16565b600260008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610de48b6116d7565b91509150610e298b610e2384610e1588610e078f8e611ee490919063ffffffff16565b611efd90919063ffffffff16565b611efd90919063ffffffff16565b83611f19565b8973ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8b6040518082815260200191505060405180910390a3610ed630610ed184610ec388610eb58c610ea7306112ec565b611ee490919063ffffffff16565b611ee490919063ffffffff16565b611ee490919063ffffffff16565b611f6b565b6000861115610f4b577f2a90f808c9dd57afe043de25b0834f61e5484e5fbc5a3cf6b454bf09e70ca9bb3387604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b6000841115610fc0577f2a90f808c9dd57afe043de25b0834f61e5484e5fbc5a3cf6b454bf09e70ca9bb8a85604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b6000821115611035577f2a90f808c9dd57afe043de25b0834f61e5484e5fbc5a3cf6b454bf09e70ca9bb8b83604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b60019750505050505050509392505050565b600860009054906101000a900460ff1681565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310151561116c576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611200565b61117f8382611ee490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60006fffffffffffffffffffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a357600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114aa57600080fd5b6114b3336112ec565b905081811015151561152d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f7420656e617567687420746f6b656e2062616c616e63650000000000000081525060200191505060405180910390fd5b611549336115448484611ee490919063ffffffff16565b611f6b565b61156d306115688461155a306112ec565b611efd90919063ffffffff16565b611f6b565b60048290806001815401808255809150509060018203906000526020600020016000909192909190915055503373ffffffffffffffffffffffffffffffffffffffff167f679bed14dad28ba2c6f12293dd35135a4f1c2df0a1a7b0b5975d5cd6872b8f94836040518082815260200191505060405180910390a25050565b6004818154811015156115fa57fe5b906000526020600020016000915090505481565b600581565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116cf5780601f106116a4576101008083540402835291602001916116cf565b820191906000526020600020905b8154815290600101906020018083116116b257829003601f168201915b505050505081565b60008060008060008060006116eb8861200d565b945084600480549050111561176a57611703886112ec565b935060009250849150846004805490500390505b808210156117595760015460048381548110151561173157fe5b9060005260206000200154850281151561174757fe5b04830192508180600101925050611717565b828280600101935096509650611775565b600085819150965096505b5050505050915091565b6fffffffffffffffffffffffffffffffff81565b60008060008060008060008873ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614151515611868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f43616e6e6f742073656e6420746f6b656e7320746f20746f6b656e20736d617281526020017f7420636f6e74726163740000000000000000000000000000000000000000000081525060400191505060405180910390fd5b611871336112ec565b9550858811151515611911576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f53656e6465722062616c616e6365206973206c657373207468616e2076616c7581526020017f650000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16141515156119b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4164647265737320746f2063616e206e6f74206265203078300000000000000081525060200191505060405180910390fd5b6119bf336116d7565b945094506119f2336119ec876119de8c8b611ee490919063ffffffff16565b611efd90919063ffffffff16565b86611f19565b6119fb896112ec565b9250611a06896116d7565b91509150611a3989611a3384611a258c88611efd90919063ffffffff16565b611efd90919063ffffffff16565b83611f19565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8a6040518082815260200191505060405180910390a3611ad430611acf84611ac189611ab3306112ec565b611ee490919063ffffffff16565b611ee490919063ffffffff16565b611f6b565b6000851115611b49577f2a90f808c9dd57afe043de25b0834f61e5484e5fbc5a3cf6b454bf09e70ca9bb3386604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b6000821115611bbe577f2a90f808c9dd57afe043de25b0834f61e5484e5fbc5a3cf6b454bf09e70ca9bb8983604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b6001965050505050505092915050565b60006004611bdb8361200d565b815481101515611be757fe5b90600052602060002001549050919050565b6000611c8a82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611efd90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ed857600080fd5b611ee18161205e565b50565b6000828211151515611ef257fe5b818303905092915050565b60008183019050828110151515611f1057fe5b80905092915050565b6080819060020a028217600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b8060806fffffffffffffffffffffffffffffffff9060020a02600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541617600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60006080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549060020a90049050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561209a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820148401debefef6f32648f8d959cc16a508b86a737085d02f9c107bf33d3f158d0029",
  "deployedBytecode": "0x608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde0314610117578063095ea7b3146101a757806318160ddd1461020c57806323b872dd14610237578063313ce567146102bc57806366188463146102ed57806370a0823114610352578063715018a6146103a9578063752d2bfb146103c0578063814b3fe0146103ed578063883c6f401461042e5780638da5cb5b1461045f57806395d89b41146104b65780639f65742614610546578063a357768a146105a4578063a9059cbb146105cf578063c4bb6bb714610634578063d73dd6231461068b578063dd62ed3e146106f0578063f2fde38b14610767575b600080fd5b34801561012357600080fd5b5061012c6107aa565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016c578082015181840152602081019050610151565b50505050905090810190601f1680156101995780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101b357600080fd5b506101f2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610848565b604051808215151515815260200191505060405180910390f35b34801561021857600080fd5b5061022161093a565b6040518082815260200191505060405180910390f35b34801561024357600080fd5b506102a2600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610944565b604051808215151515815260200191505060405180910390f35b3480156102c857600080fd5b506102d1611047565b604051808260ff1660ff16815260200191505060405180910390f35b3480156102f957600080fd5b50610338600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061105a565b604051808215151515815260200191505060405180910390f35b34801561035e57600080fd5b50610393600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112ec565b6040518082815260200191505060405180910390f35b3480156103b557600080fd5b506103be611347565b005b3480156103cc57600080fd5b506103eb6004803603810190808035906020019092919050505061144c565b005b3480156103f957600080fd5b50610418600480360381019080803590602001909291905050506115eb565b6040518082815260200191505060405180910390f35b34801561043a57600080fd5b5061044361160e565b604051808260ff1660ff16815260200191505060405180910390f35b34801561046b57600080fd5b50610474611613565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156104c257600080fd5b506104cb611639565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561050b5780820151818401526020810190506104f0565b50505050905090810190601f1680156105385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561055257600080fd5b50610587600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116d7565b604051808381526020018281526020019250505060405180910390f35b3480156105b057600080fd5b506105b961177f565b6040518082815260200191505060405180910390f35b3480156105db57600080fd5b5061061a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611793565b604051808215151515815260200191505060405180910390f35b34801561064057600080fd5b50610675600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611bce565b6040518082815260200191505060405180910390f35b34801561069757600080fd5b506106d6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611bf9565b604051808215151515815260200191505060405180910390f35b3480156106fc57600080fd5b50610751600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611df5565b6040518082815260200191505060405180910390f35b34801561077357600080fd5b506107a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e7c565b005b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108405780601f1061081557610100808354040283529160200191610840565b820191906000526020600020905b81548152906001019060200180831161082357829003601f168201915b505050505081565b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b6000806000806000806000808973ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614151515610a1a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f43616e6e6f742073656e6420746f6b656e7320746f20746f6b656e20736d617281526020017f7420636f6e74726163740000000000000000000000000000000000000000000081525060400191505060405180910390fd5b610a238b6112ec565b8911151515610a9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f42616c616e63652066726f6d206973206c657373207468616e2076616c75650081525060200191505060405180910390fd5b600260008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548911151515610b8e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f416c6c6f77616e6365206973206e6f7420656e6175676874000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff1614151515610c33576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4164647265737320746f2063616e206e6f74206265203078300000000000000081525060200191505060405180910390fd5b610c3c336112ec565b9650610c47336116d7565b95509550610c7a33610c7488610c668d8c611ee490919063ffffffff16565b611efd90919063ffffffff16565b87611f19565b610c838a6112ec565b9650610c8e8a6116d7565b93509350610cc18a610cbb86610cad8d8c611efd90919063ffffffff16565b611efd90919063ffffffff16565b85611f19565b610cca8b6112ec565b9650610d5b89600260008e73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611ee490919063ffffffff16565b600260008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610de48b6116d7565b91509150610e298b610e2384610e1588610e078f8e611ee490919063ffffffff16565b611efd90919063ffffffff16565b611efd90919063ffffffff16565b83611f19565b8973ffffffffffffffffffffffffffffffffffffffff168b73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8b6040518082815260200191505060405180910390a3610ed630610ed184610ec388610eb58c610ea7306112ec565b611ee490919063ffffffff16565b611ee490919063ffffffff16565b611ee490919063ffffffff16565b611f6b565b6000861115610f4b577f2a90f808c9dd57afe043de25b0834f61e5484e5fbc5a3cf6b454bf09e70ca9bb3387604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b6000841115610fc0577f2a90f808c9dd57afe043de25b0834f61e5484e5fbc5a3cf6b454bf09e70ca9bb8a85604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b6000821115611035577f2a90f808c9dd57afe043de25b0834f61e5484e5fbc5a3cf6b454bf09e70ca9bb8b83604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b60019750505050505050509392505050565b600860009054906101000a900460ff1681565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050808310151561116c576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611200565b61117f8382611ee490919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60006fffffffffffffffffffffffffffffffff600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054169050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156113a357600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a26000600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156114aa57600080fd5b6114b3336112ec565b905081811015151561152d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4e6f7420656e617567687420746f6b656e2062616c616e63650000000000000081525060200191505060405180910390fd5b611549336115448484611ee490919063ffffffff16565b611f6b565b61156d306115688461155a306112ec565b611efd90919063ffffffff16565b611f6b565b60048290806001815401808255809150509060018203906000526020600020016000909192909190915055503373ffffffffffffffffffffffffffffffffffffffff167f679bed14dad28ba2c6f12293dd35135a4f1c2df0a1a7b0b5975d5cd6872b8f94836040518082815260200191505060405180910390a25050565b6004818154811015156115fa57fe5b906000526020600020016000915090505481565b600581565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116cf5780601f106116a4576101008083540402835291602001916116cf565b820191906000526020600020905b8154815290600101906020018083116116b257829003601f168201915b505050505081565b60008060008060008060006116eb8861200d565b945084600480549050111561176a57611703886112ec565b935060009250849150846004805490500390505b808210156117595760015460048381548110151561173157fe5b9060005260206000200154850281151561174757fe5b04830192508180600101925050611717565b828280600101935096509650611775565b600085819150965096505b5050505050915091565b6fffffffffffffffffffffffffffffffff81565b60008060008060008060008873ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614151515611868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001807f43616e6e6f742073656e6420746f6b656e7320746f20746f6b656e20736d617281526020017f7420636f6e74726163740000000000000000000000000000000000000000000081525060400191505060405180910390fd5b611871336112ec565b9550858811151515611911576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f53656e6465722062616c616e6365206973206c657373207468616e2076616c7581526020017f650000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff16141515156119b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4164647265737320746f2063616e206e6f74206265203078300000000000000081525060200191505060405180910390fd5b6119bf336116d7565b945094506119f2336119ec876119de8c8b611ee490919063ffffffff16565b611efd90919063ffffffff16565b86611f19565b6119fb896112ec565b9250611a06896116d7565b91509150611a3989611a3384611a258c88611efd90919063ffffffff16565b611efd90919063ffffffff16565b83611f19565b8873ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8a6040518082815260200191505060405180910390a3611ad430611acf84611ac189611ab3306112ec565b611ee490919063ffffffff16565b611ee490919063ffffffff16565b611f6b565b6000851115611b49577f2a90f808c9dd57afe043de25b0834f61e5484e5fbc5a3cf6b454bf09e70ca9bb3386604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b6000821115611bbe577f2a90f808c9dd57afe043de25b0834f61e5484e5fbc5a3cf6b454bf09e70ca9bb8983604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b6001965050505050505092915050565b60006004611bdb8361200d565b815481101515611be757fe5b90600052602060002001549050919050565b6000611c8a82600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611efd90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611ed857600080fd5b611ee18161205e565b50565b6000828211151515611ef257fe5b818303905092915050565b60008183019050828110151515611f1057fe5b80905092915050565b6080819060020a028217600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b8060806fffffffffffffffffffffffffffffffff9060020a02600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541617600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b60006080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549060020a90049050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561209a57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a72305820148401debefef6f32648f8d959cc16a508b86a737085d02f9c107bf33d3f158d0029",
  "sourceMap": "136:237:2:-;;;185:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;218:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;277:2;253:26;;;;;;;;;;;;;;;;;;;;288:82;8:9:-1;5:2;;;30:1;27;20:12;5:2;288:82:2;575:10:4;567:5;;:18;;;;;;;;;;;;;;;;;;353:8:2;;;;;;;;;;;347:2;:14;336:26;;:7;:26;313:49;;:8;:20;322:10;313:20;;;;;;;;;;;;;;;:49;;;;136:237;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "136:237:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;185:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;185:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;185:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:188:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1814:188:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:83:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:5;;;;;;;;;;;;;;;;;;;;;;;1653:1751:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1653:1751:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;253:26:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;253:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;3679:432:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3679:432:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;512:131:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;512:131:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:4;;;;;;1293:393:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1293:393:0;;;;;;;;;;;;;;;;;;;;;;;;;;407:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;407:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;284:43;;8:9:-1;5:2;;;30:1;27;20:12;5:2;284:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;218:28:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;218:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;218:28:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1830:641:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1830:641:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;233:44:0;;;;;;;;;;;;;;;;;;;;;;;387:1258:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;387:1258:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1694:128:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1694:128:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2926:296:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2926:296:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2321:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2321:153:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;185:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1814:188:9:-;1881:4;1925:6;1893:7;:19;1901:10;1893:19;;;;;;;;;;;;;;;:29;1913:8;1893:29;;;;;;;;;;;;;;;:38;;;;1963:8;1942:38;;1951:10;1942:38;;;1973:6;1942:38;;;;;;;;;;;;;;;;;;1993:4;1986:11;;1814:188;;;;:::o;389:83:5:-;433:7;455:12;;448:19;;389:83;:::o;1653:1751:1:-;1735:4;2106:12;2158:17;2177:18;2405:19;2426:20;2698:15;2715:16;1777:3;1760:20;;1768:4;1760:20;;;;1752:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1856:16;1866:5;1856:9;:16::i;:::-;1846:6;:26;;1838:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1937:7;:14;1945:5;1937:14;;;;;;;;;;;;;;;:26;1952:10;1937:26;;;;;;;;;;;;;;;;1927:6;:36;;1919:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:1;2011:17;;:3;:17;;;;2003:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2121:21;2131:10;2121:9;:21::i;:::-;2106:36;;2200:29;2218:10;2200:17;:29::i;:::-;2153:76;;;;2240:84;2251:10;2262:42;2286:17;2262:19;2274:6;2262:7;:11;;:19;;;;:::i;:::-;:23;;:42;;;;:::i;:::-;2305:18;2240:10;:84::i;:::-;2375:14;2385:3;2375:9;:14::i;:::-;2365:24;;2451:22;2469:3;2451:17;:22::i;:::-;2400:73;;;;2484:81;2495:3;2499:44;2523:19;2499;2511:6;2499:7;:11;;:19;;;;:::i;:::-;:23;;:44;;;;:::i;:::-;2544:20;2484:10;:81::i;:::-;2588:16;2598:5;2588:9;:16::i;:::-;2578:26;;2644:38;2675:6;2644:7;:14;2652:5;2644:14;;;;;;;;;;;;;;;:26;2659:10;2644:26;;;;;;;;;;;;;;;;:30;;:38;;;;:::i;:::-;2615:7;:14;2623:5;2615:14;;;;;;;;;;;;;;;:26;2630:10;2615:26;;;;;;;;;;;;;;;:67;;;;2736:24;2754:5;2736:17;:24::i;:::-;2693:67;;;;2771:100;2782:5;2788:65;2837:15;2788:44;2812:19;2788;2800:6;2788:7;:11;;:19;;;;:::i;:::-;:23;;:44;;;;:::i;:::-;:48;;:65;;;;:::i;:::-;2854:16;2771:10;:100::i;:::-;2905:3;2889:28;;2898:5;2889:28;;;2910:6;2889:28;;;;;;;;;;;;;;;;;;2969:111;2988:4;2995:84;3063:15;2995:63;3038:19;2995:38;3015:17;2995:15;3005:4;2995:9;:15::i;:::-;:19;;:38;;;;:::i;:::-;:42;;:63;;;;:::i;:::-;:67;;:84;;;;:::i;:::-;2969:10;:111::i;:::-;3124:1;3104:17;:21;3101:87;;;3145:43;3159:10;3170:17;3145:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;3101:87;3224:1;3202:19;:23;3199:84;;;3245:38;3259:3;3263:19;3245:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;3199:84;3315:1;3297:15;:19;3294:78;;;3336:36;3350:5;3356:15;3336:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;3294:78;3392:4;3385:11;;1653:1751;;;;;;;;;;;;:::o;253:26:2:-;;;;;;;;;;;;;:::o;3679:432:9:-;3785:4;3799:16;3818:7;:19;3826:10;3818:19;;;;;;;;;;;;;;;:29;3838:8;3818:29;;;;;;;;;;;;;;;;3799:48;;3877:8;3857:16;:28;;3853:165;;;3927:1;3895:7;:19;3903:10;3895:19;;;;;;;;;;;;;;;:29;3915:8;3895:29;;;;;;;;;;;;;;;:33;;;;3853:165;;;3981:30;3994:16;3981:8;:12;;:30;;;;:::i;:::-;3949:7;:19;3957:10;3949:19;;;;;;;;;;;;;;;:29;3969:8;3949:29;;;;;;;;;;;;;;;:62;;;;3853:165;4049:8;4028:61;;4037:10;4028:61;;;4059:7;:19;4067:10;4059:19;;;;;;;;;;;;;;;:29;4079:8;4059:29;;;;;;;;;;;;;;;;4028:61;;;;;;;;;;;;;;;;;;4102:4;4095:11;;3679:432;;;;;:::o;512:131:0:-;568:7;269:8;603;:16;612:6;603:16;;;;;;;;;;;;;;;;:31;588:47;;512:131;;;:::o;1001:111:4:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;1293:393:0:-;1355:18;719:5:4;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1376:21:0;1386:10;1376:9;:21::i;:::-;1355:42;;1433:6;1416:13;:23;;1408:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1482:49;1493:10;1505:25;1523:6;1505:13;:17;;:25;;;;:::i;:::-;1482:10;:49::i;:::-;1542:54;1561:4;1568:27;1588:6;1568:15;1578:4;1568:9;:15::i;:::-;:19;;:27;;;;:::i;:::-;1542:10;:54::i;:::-;1609:9;1624:6;1609:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1609:22:0;;;;;;;;;;;;;;;;;;;;;;1659:10;1647:31;;;1671:6;1647:31;;;;;;;;;;;;;;;;;;1293:393;;:::o;407:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;284:43::-;326:1;284:43;:::o;238:20:4:-;;;;;;;;;;;;;:::o;218:28:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1830:641:0:-;1888:4;1894;1911:17;2020:18;2073:19;2111:6;2147:10;1931:23;1947:6;1931:15;:23::i;:::-;1911:43;;1989:12;1970:9;:16;;;;:31;1967:460;;;2041:17;2051:6;2041:9;:17::i;:::-;2020:38;;2095:1;2073:23;;2120:12;2111:21;;2179:12;2160:9;:16;;;;:31;2147:44;;2253:117;2263:5;2259:1;:9;2253:117;;;2358:12;;2343:9;2353:1;2343:12;;;;;;;;;;;;;;;;;;2327:13;:28;:43;;;;;;;;2310:14;:60;2293:77;;2271:3;;;;;;;2253:117;;;2395:14;2411:3;;;;;;2387:28;;;;;;1967:460;2447:1;2449:12;2439:23;;;;;;;1830:641;;;;;;;;;:::o;233:44::-;269:8;233:44;:::o;387:1258:1:-;448:4;552:18;793:17;812:18;1006:19;1058;1079:20;489:3;472:20;;480:4;472:20;;;;464:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;573:21;583:10;573:9;:21::i;:::-;552:42;;623:13;613:6;:23;;605:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;708:1;693:17;;:3;:17;;;;685:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;835:29;853:10;835:17;:29::i;:::-;788:76;;;;875:90;886:10;897:48;927:17;897:25;915:6;897:13;:17;;:25;;;;:::i;:::-;:29;;:48;;;;:::i;:::-;946:18;875:10;:90::i;:::-;1028:14;1038:3;1028:9;:14::i;:::-;1006:36;;1104:22;1122:3;1104:17;:22::i;:::-;1053:73;;;;1137:88;1148:3;1152:51;1183:19;1152:26;1171:6;1152:14;:18;;:26;;;;:::i;:::-;:30;;:51;;;;:::i;:::-;1204:20;1137:10;:88::i;:::-;1264:3;1243:33;;1252:10;1243:33;;;1269:6;1243:33;;;;;;;;;;;;;;;;;;1328:90;1347:4;1354:63;1397:19;1354:38;1374:17;1354:15;1364:4;1354:9;:15::i;:::-;:19;;:38;;;;:::i;:::-;:42;;:63;;;;:::i;:::-;1328:10;:90::i;:::-;1454:1;1434:17;:21;1431:87;;;1475:43;1489:10;1500:17;1475:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;1431:87;1554:1;1532:19;:23;1529:84;;;1575:38;1589:3;1593:19;1575:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;1529:84;1633:4;1626:11;;387:1258;;;;;;;;;;:::o;1694:128:0:-;1756:4;1780:9;1790:23;1806:6;1790:15;:23::i;:::-;1780:34;;;;;;;;;;;;;;;;;;1773:41;;1694:128;;;:::o;2926:296:9:-;3027:4;3081:46;3115:11;3081:7;:19;3089:10;3081:19;;;;;;;;;;;;;;;:29;3101:8;3081:29;;;;;;;;;;;;;;;;:33;;:46;;;;:::i;:::-;3041:7;:19;3049:10;3041:19;;;;;;;;;;;;;;;:29;3061:8;3041:29;;;;;;;;;;;;;;;:87;;;;3160:8;3139:61;;3148:10;3139:61;;;3170:7;:19;3178:10;3170:19;;;;;;;;;;;;;;;:29;3190:8;3170:29;;;;;;;;;;;;;;;;3139:61;;;;;;;;;;;;;;;;;;3213:4;3206:11;;2926:296;;;;:::o;2321:153::-;2420:7;2444;:15;2452:6;2444:15;;;;;;;;;;;;;;;:25;2460:8;2444:25;;;;;;;;;;;;;;;;2437:32;;2321:153;;;;:::o;1274:103:4:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;1060:116:3:-;1120:7;1148:2;1142;:8;;1135:16;;;;;;1169:2;1164;:7;1157:14;;1060:116;;;;:::o;1238:128::-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;967:145:0:-;1100:3;1083:13;:20;;;;1075:6;:29;1056:8;:16;1065:6;1056:16;;;;;;;;;;;;;;;:48;;;;967:145;;;:::o;651:139::-;776:6;771:3;269:8;757:17;;;;739:8;:16;748:6;739:16;;;;;;;;;;;;;;;;:36;:43;720:8;:16;729:6;720:16;;;;;;;;;;;;;;;:62;;;;651:139;;:::o;1120:112::-;1178:4;1220:3;1202:8;:16;1211:6;1202:16;;;;;;;;;;;;;;;;:21;;;;;1194:30;;1120:112;;;:::o;1512:171:4:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o",
  "source": "pragma solidity ^0.4.24;\r\nimport 'openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol';\r\nimport './DividendableToken.sol';\r\n\r\ncontract TokenMock is DividendableToken {\r\n\r\n    string public name = \"DIV\";\r\n    string public symbol = \"DIV\";\r\n    uint8 public decimals = 18;\r\n\r\n    constructor() {\r\n        balances[msg.sender] = 1000000 * (10 ** decimals);\r\n    }\r\n}",
  "sourcePath": "C:\\repo\\DividendableToken\\contracts\\TokenMock.sol",
  "ast": {
    "absolutePath": "/C/repo/DividendableToken/contracts/TokenMock.sol",
    "exportedSymbols": {
      "TokenMock": [
        657
      ]
    },
    "id": 658,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 627,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "id": 628,
        "nodeType": "ImportDirective",
        "scope": 658,
        "sourceUnit": 1115,
        "src": "26:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/repo/DividendableToken/contracts/DividendableToken.sol",
        "file": "./DividendableToken.sol",
        "id": 629,
        "nodeType": "ImportDirective",
        "scope": 658,
        "sourceUnit": 626,
        "src": "99:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 630,
              "name": "DividendableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 625,
              "src": "158:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DividendableToken_$625",
                "typeString": "contract DividendableToken"
              }
            },
            "id": 631,
            "nodeType": "InheritanceSpecifier",
            "src": "158:17:2"
          }
        ],
        "contractDependencies": [
          269,
          625,
          837,
          933,
          976,
          1008,
          1361
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 657,
        "linearizedBaseContracts": [
          657,
          625,
          269,
          837,
          1361,
          933,
          976,
          1008
        ],
        "name": "TokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 634,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "185:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 632,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "185:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "444956",
              "id": 633,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "206:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_400dd0662f4f385cffe065a220220cd808f5c398bc02721c380df8b4b4da0dff",
                "typeString": "literal_string \"DIV\""
              },
              "value": "DIV"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 637,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "218:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 635,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "218:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "444956",
              "id": 636,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "241:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_400dd0662f4f385cffe065a220220cd808f5c398bc02721c380df8b4b4da0dff",
                "typeString": "literal_string \"DIV\""
              },
              "value": "DIV"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 640,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "253:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 638,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "253:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 639,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "277:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 655,
              "nodeType": "Block",
              "src": "302:68:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 643,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "313:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 646,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 644,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1376,
                          "src": "322:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "322:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "313:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "31303030303030",
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "336:7:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "347:2:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 649,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "353:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "347:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "id": 651,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "346:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "336:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "313:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "313:49:2"
                }
              ]
            },
            "documentation": null,
            "id": 656,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "302:0:2"
            },
            "scope": 657,
            "src": "288:82:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 658,
        "src": "136:237:2"
      }
    ],
    "src": "0:373:2"
  },
  "legacyAST": {
    "absolutePath": "/C/repo/DividendableToken/contracts/TokenMock.sol",
    "exportedSymbols": {
      "TokenMock": [
        657
      ]
    },
    "id": 658,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 627,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "id": 628,
        "nodeType": "ImportDirective",
        "scope": 658,
        "sourceUnit": 1115,
        "src": "26:71:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/repo/DividendableToken/contracts/DividendableToken.sol",
        "file": "./DividendableToken.sol",
        "id": 629,
        "nodeType": "ImportDirective",
        "scope": 658,
        "sourceUnit": 626,
        "src": "99:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 630,
              "name": "DividendableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 625,
              "src": "158:17:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DividendableToken_$625",
                "typeString": "contract DividendableToken"
              }
            },
            "id": 631,
            "nodeType": "InheritanceSpecifier",
            "src": "158:17:2"
          }
        ],
        "contractDependencies": [
          269,
          625,
          837,
          933,
          976,
          1008,
          1361
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 657,
        "linearizedBaseContracts": [
          657,
          625,
          269,
          837,
          1361,
          933,
          976,
          1008
        ],
        "name": "TokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 634,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "185:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 632,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "185:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "444956",
              "id": 633,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "206:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_400dd0662f4f385cffe065a220220cd808f5c398bc02721c380df8b4b4da0dff",
                "typeString": "literal_string \"DIV\""
              },
              "value": "DIV"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 637,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "218:28:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 635,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "218:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "444956",
              "id": 636,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "241:5:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_400dd0662f4f385cffe065a220220cd808f5c398bc02721c380df8b4b4da0dff",
                "typeString": "literal_string \"DIV\""
              },
              "value": "DIV"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 640,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 657,
            "src": "253:26:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 638,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "253:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 639,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "277:2:2",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 655,
              "nodeType": "Block",
              "src": "302:68:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 643,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 850,
                        "src": "313:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 646,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 644,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1376,
                          "src": "322:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "322:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "313:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "31303030303030",
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "336:7:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "347:2:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 649,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "353:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "347:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "id": 651,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "346:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "336:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "src": "313:49:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 654,
                  "nodeType": "ExpressionStatement",
                  "src": "313:49:2"
                }
              ]
            },
            "documentation": null,
            "id": 656,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "302:0:2"
            },
            "scope": 657,
            "src": "288:82:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 658,
        "src": "136:237:2"
      }
    ],
    "src": "0:373:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-23T17:45:17.903Z"
}